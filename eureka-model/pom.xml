<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.15.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>eureka-model</artifactId>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <spring-cloud.version>Edgware.SR4</spring-cloud.version>
        <!--protobuf-->
        <proto.path>protoc</proto.path>
        <proto.version>3.3.1</proto.version>
        <idl.folder>${basedir}/src/main/resources</idl.folder>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-feign</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-netflix-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!--protobuf-->
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>${proto.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.googlecode.protobuf-java-format</groupId>
            <artifactId>protobuf-java-format</artifactId>
            <version>1.4</version>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java-util</artifactId>
            <version>3.6.1</version>
        </dependency>
        <!--gson-->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.5</version>
        </dependency>

    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <!--protobuf-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-sources</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <tasks>
                                <echo>Delete folder : ${basedir}/src/main/gen</echo>
                                <delete dir="${basedir}/src/main/gen" quiet="true"/>
                                <echo>Create folder : ${basedir}/src/main/gen</echo>
                                <mkdir dir="${basedir}/src/main/gen"/>
                                <!-- Compile proto files in all locations -->
                                <echo>Compiling **/*.proto files...</echo>
                                <apply executable="${proto.path}">
                                    <arg value="--proto_path=${idl.folder}"/>
                                    <arg value="--java_out=${basedir}/src/main/gen"/>
                                    <fileset dir="${idl.folder}" includes="**/*.proto"
                                             excludes="google/protobuf/descriptor.proto"/>
                                </apply>
                            </tasks>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-sources-js</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <tasks>
                                <echo>Delete folder : ${basedir}/src/main/gen_js_import</echo>
                                <delete dir="${basedir}/src/main/gen_js_import" quiet="true"/>
                                <echo>Create folder : ${basedir}/src/main/gen_js_import</echo>
                                <mkdir dir="${basedir}/src/main/gen_js_import"/>
                                <!-- Compile proto files in all locations -->
                                <echo>Compiling **/*.proto files...</echo>
                                <apply executable="${proto.path}">
                                    <arg value="--proto_path=${idl.folder}"/>
                                    <arg value="--js_out=import_style=guoguo_eureka_model,binary:${basedir}/src/main/gen_js_import"/>
                                    <fileset dir="${idl.folder}" includes="**/*.proto"
                                             excludes="google/protobuf/descriptor.proto"/>
                                </apply>
                            </tasks>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-sources-js2</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <tasks>
                                <echo>Delete folder : ${basedir}/src/main/gen_js_library</echo>
                                <delete dir="${basedir}/src/main/gen_js_library" quiet="true"/>
                                <echo>Create folder : ${basedir}/src/main/gen_js_library</echo>
                                <mkdir dir="${basedir}/src/main/gen_js_library"/>
                                <!-- Compile proto files in all locations -->
                                <echo>Compiling **/*.proto files...</echo>
                                <apply executable="${proto.path}">
                                    <arg value="--proto_path=${idl.folder}"/>
                                    <arg value="--js_out=library=guoguo_eureka_model,binary:${basedir}/src/main/gen_js_library"/>
                                    <fileset dir="${idl.folder}" includes="**/*.proto"
                                             excludes="google/protobuf/descriptor.proto"/>
                                </apply>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/main/gen</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>